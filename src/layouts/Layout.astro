---
import '../styles/global.css';
--- 

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>Astro Basics</title>
	</head>
	<body class="bg-black text-white relative">
		<div class="texture">
			<div class="texture-child">
			</div>
		</div>
		<div id="container">
			<slot />
		</div>

	<script>
		document.addEventListener('DOMContentLoaded', () => {
			const observer = new IntersectionObserver((entries, obs) => {
				entries.forEach(entry => {
					if(entry.isIntersecting) {
						const parent = entry.target
						parent.classList.add('opacity-100', 'translate-y-0')
						parent.classList.remove('opacity-0', 'translate-y-8')
						
						const children = parent.querySelectorAll('.reveal-child')
						children.forEach(child => {
							child.classList.add('opacity-100', 'translate-y-0')
							child.classList.remove('opacity-0', 'translate-y-8')
						})
						obs.unobserve(parent);
					}
				});
			}, {
				threshold: 0.25
			})

			const elements = document.querySelectorAll('.reveal');
			elements.forEach(element => {
				element.classList.add('opacity-0', 'translate-y-8','transition-all', 'duration-1000', 'ease-out');

				const children = element.querySelectorAll('reveal-child');
				children.forEach(child => {
					child.classList.add('opacity-0', 'translate-y-8','transition-all', 'duration-1000', 'ease-out')
				})

				observer.observe(element);
			})
		})
	</script>
	</body>
</html>

<style>

	html,
	body {
		margin: 0;
		padding: 0;
		font-family: "Outfit", system-ui, -apple-system, sans-serif;
	}
	#container {
		width: min(95%, 64rem);
		margin: 0 auto;
	}
</style>