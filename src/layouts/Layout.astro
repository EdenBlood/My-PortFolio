---
import MainCard from '../components/MainCard.astro'
import '../styles/global.css'
import GlobalLayout from './GlobalLayout.astro'
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>EdenBlood Dev PortFolio</title>
  </head>

  <body class="text-slate-50 relative">
    <GlobalLayout>
      <div id="stars"></div>
      <div id="stars2"></div>
      <div id="stars3"></div>
      <div id="stars4"></div>
      <div id="stars5"></div>
      <div id="stars6"></div>

      <div class="mx-auto max-w-[95%] lg:w-5xl xl:w-6xl 2xl:w-7xl">
        <div
          class="relative flex flex-col lg:flex-row w-full min-h-screen gap-18 animate-fade-in-down"
        >
          <main
            class="flex flex-col md:flex-row lg:flex-col flex-nowrap justify-between items-center h-[95vh] md:h-[90vh] relative top-[2.5vh] md:top-[5vh] lg:sticky bg-gray-card py-8 md:py-12 md:px-12 lg:py-8 lg:px-0 rounded-2xl w-full lg:w-1/3 2xl:w-2/5 self-start md:gap-6 lg:gap-0 xl:gap-2"
          >
            <MainCard />
          </main>
          <div
            class="w-full lg:w-2/3 2xl:w-3/5 py-[2.5vh] md:py-[5vh] overflow-hidden"
          >
            <slot />
          </div>
        </div>
      </div>
    </GlobalLayout>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const observer = new IntersectionObserver(
          (entries, obs) => {
            entries.forEach((entry) => {
              if (entry.isIntersecting) {
                const parent = entry.target
                parent.classList.add('opacity-100', 'translate-y-0')
                parent.classList.remove('opacity-0', 'translate-y-8')

                const children = parent.querySelectorAll('.reveal-child')
                children.forEach((child) => {
                  child.classList.add('opacity-100', 'translate-y-0')
                  child.classList.remove('opacity-0', 'translate-y-8')
                })
                obs.unobserve(parent)
              }
            })
          },
          {
            threshold: 0.25
          }
        )

        const elements = document.querySelectorAll('.reveal')
        elements.forEach((element) => {
          element.classList.add(
            'opacity-0',
            'translate-y-8',
            'transition-all',
            'duration-1000',
            'ease-out'
          )

          const children = element.querySelectorAll('reveal-child')
          children.forEach((child) => {
            child.classList.add(
              'opacity-0',
              'translate-y-8',
              'transition-all',
              'duration-1000',
              'ease-out'
            )
          })

          observer.observe(element)
        })
      })
    </script>
  </body>
</html>

<style is:global></style>
